- name: install os dependencies
  package:
    name:
    - aptitude
    - sudo

- name: forward ssh agent via sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: SSH_AUTH_SOCK
    line: Defaults env_keep += "SSH_AUTH_SOCK"
  when: taranisng_ssh_auth_sock | bool

- name: repos
  apt_repository:
    repo: "{{ item }}"
    state: present
    update_cache: false
  with_items:
  - "deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }} contrib"
  - "deb-src http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }} contrib"
  - "deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }}-updates contrib"
  - "deb-src http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }}-updates contrib"
  - "deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }} universe"
  - "deb-src http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }} universe"
  - "deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }}-updates universe"
  - "deb-src http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }}-updates universe"
  - "deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }} multiverse"
  - "deb-src http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }} multiverse"
  - "deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }}-updates multiverse"
  - "deb-src http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }}-updates multiverse"
  register: repos_added

- name: update package cache
  apt:
    update_cache: true
  when: repos_added is changed

- name: create installation group (if not present)
  group:
    name: "{{ taranisng_installation_group }}"
    state: present

- name: create installation user (if not present)
  user:
    name: "{{ taranisng_installation_user }}"
    group: "{{ taranisng_installation_group }}"
    comment: "Taranis NG"
    state: present
    append: yes
