name: GUI Docker image

on:
  push:
    paths:
    - 'src/gui/**'
    - 'docker/Dockerfile.gui'
    branches:
    - master
    - awake
    tags:
    - "**"


permissions:
  packages: write
  contents: write

jobs:
  build_npm:
    name: npm build
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 'latest'
          cache: 'npm'
          cache-dependency-path: |
            src/gui/package-lock.json
      - name: Install dependencies
        working-directory: src/gui
        run: npm ci
      - name: Rebuild the dist/ directory
        working-directory: src/gui
        run: npm run build
      - name: Package dist/
        working-directory: src/gui
        run: npm run package
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: |
            src/gui/taranis-ng-ui*.tgz

  build_docker:
    name: build docker
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: set build env
        run: |
          echo "GHCR_OWNER=${GITHUB_REPOSITORY_OWNER,,}" >>${GITHUB_ENV}
          echo "GIT_INFO=$(./docker/git_info.sh)" >>${GITHUB_ENV}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push gui
        uses: docker/build-push-action@v4
        with:
          file: docker/Dockerfile.gui
          push: true
          tags: |
            ghcr.io/${{ env.GHCR_OWNER }}/taranis-ng-gui:latest
            ghcr.io/${{ env.GHCR_OWNER }}/taranis-ng-gui:${{ github.ref_name }}
          build-args: |
            git_info=${{ env.GIT_INFO }}
