openapi: 3.0.3
info:
  title: Taranis NG
  description: |-
    The Taranis NG API provides endpoints for TODO.
  license:
    name: GPL-3.0
  version: 1.0.11
externalDocs:
  description: GitHub
  url: https://github.com/ait-cs-IaaS/Taranis-NG/
servers:
  - url: https://dev.taranis.cyberrange.rocks/api/v1
    description: AWAKE branch
  - url: https://taranis.cyberrange.rocks/api/v1
    description: main branch
tags:
  - name: auth
    description: session-related functionality
  - name: isalive
    description: see whether the Taranis instance is alive
  - name: users
    description: read/update the profile, get wordlists, product types and publisher presets
  - name: analyze
    description: read/update report items, their types, groups and attributes
  - name: assess
    description: TODO
  - name: my-assets
    description: TODO
  - name: bots
    description: TODO
  - name: collectors
    description: TODO
  - name: config
    description: TODO
  - name: dashboard-data
    description: TODO
  - name: tagcloud
    description: TODO
  - name: presenters
    description: TODO
  - name: publish
    description: TODO
  - name: publishers
    description: TODO
  - name: remote
    description: TODO
security:
  - API_key: []
paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: >-
        authenticate with either 
        username and password, 
        via Keycloak or 
        OpenID Connect
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/req.auth.username_password'
                - $ref: '#/components/schemas/req.auth.keycloak'
                - $ref: '#/components/schemas/req.auth.oidc'
      responses:
        '200':
          description: successful authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.JWT'
        '400':
          description: authentication error (Keycloak)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.error.keycloak.missing_param'
        '401':
          description: authentication error (username + password)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.error'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.error.keycloak'
    get:
      tags:
        - auth
      summary: get redirected to the URL requested before authentication
      parameters:
        - name: gotoUrl
          in: query
          required: false
          schema:
            type: string
      responses:
        '302':
          description: redirection to the URL requested before authentication
  /auth/refresh:
    get:
      tags:
        - auth
      summary: refresh an API token
      responses:
        '200':
          description: refreshed API token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.JWT'
        '401':
          description: authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.error'
  /auth/logout:
    get:
      tags:
        - auth
      summary: invalidate API token (i.e. logout)
      parameters:
        - name: jwt
          in: query
          required: false
          schema:
            type: string
        - name: gotoUrl
          in: query
          required: false
          schema:
            type: string
      responses:
        '302':
          description: redirection to the specified URL
          
  /isalive:
    get:
      tags:
        - isalive
      summary: see whether the Taranis instance is alive
      security: []
      responses:
        '200':
          description: server is alive
          content:
            application/json:
              schema:
                type: object
                properties:
                  isalive:
                    type: boolean
                    example: True
                    
  /users/my-profile:
    get:
      tags: [users]
      summary: get the user's profile
      responses: 
        '200':
          description: the user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_profile'
        '401':
          description: authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.error'
    put:
      tags: [users]
      summary: update the user's profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user.new'
      responses: 
        '200':
          description: the updated user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_profile'
        '401':
          description: authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.error'
  /users/my-word-lists:
    get:
      tags: [users]
      summary: get the user's wordlists
      responses:
        '200':
          description: the user's wordlists
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  items:
                    type: array
                    items: 
                      $ref: '#/components/schemas/wordlist'
        '401':
          description: authorization error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.error'
  /users/my-product-types:
    get:
      tags: [users]
      summary: get the user's product types
      responses:
        '200':
          description: the user's product types
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  items:
                    type: array
                    items: 
                      $ref: '#/components/schemas/product_type'
        '401':
          description: authorization error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.error'
  /users/my-publisher-presets:
    get:
      tags: [users]
      summary: get the user's publisher presets
      responses:
        '200':
          description: the user's publisher presets
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  items:
                    type: array
                    items: 
                      $ref: '#/components/schemas/publisher_preset'
        '401':
          description: authorization error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.error'
                
  /analyze/report-item-types:
    get:
      tags: [analyze]
      summary: get the types of report items
      responses:
        '200':
          description: the types of report items
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  items:
                    type: array
                    items: 
                      $ref: '#/components/schemas/report_item_type'
        '401':
          description: authorization error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.error'
  /analyze/report-item-groups:
    get:
      tags: [analyze]
      summary: get the report item groups
      responses:
        '200':
          description: the report item groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/report_item'
        '401':
          description: authorization error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.error'
  /analyze/report-items:
    get:
      tags: [analyze]
      summary: get the report items
      parameters:
        - name: search
          in: query
          schema:
            type: string
        - name: completed
          in: query
          schema:
            type: string
        - name: incompleted
          in: query
          schema:
            type: string
        - name: range
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: group
          in: query
          schema:
            type: integer
        - name: offset
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: the report items
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  items:
                    type: array
                    items: 
                      $ref: '#/components/schemas/report_item.presentation'
        '401':
          description: authorization error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.error'
    post:
      tags: [analyze]
      summary: add report item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/report_item.new'
      responses:
        '200':
          description: the ID of the newly created report item
          content:
            application/text:
              schema:
                type: integer
                example: 42
        '401':
          description: authorization error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.error'
  /analyze/report-items/{report_item_id}:
    parameters:
      - name: report_item_id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags: [analyze]
      summary: get a specific report item
      responses:
        '200':
          description: the report item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/report_item'
        '401':
          description: authorization error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.error'
    put:
      tags: [analyze]
      summary: modify a specific report item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modify_report_item'
      responses:
        '200':
          description: the updated report item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modify_report_item'
        '401':
          description: authorization error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.error'
    delete:
      tags: [analyze]
      summary: delete a specific report item
      responses:
        '200':
          description: the report item was deleted
          content:
            application/text:
              schema:
                type: string
                example: success
        '401':
          description: authorization error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.error'
  /analyze/report-items/{report_item_id}/data:
    parameters:
      - name: report_item_id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags: [analyze]
      responses:
        '401':
          description: authorization error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.error'
  /analyze/report-items/{report_item_id}/field-locks:
    parameters:
      - name: report_item_id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags: [analyze]
      responses:
        '401':
          description: authorization error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.error'
  /analyze/report-items/{report_item_id}/field-locks/{field_id}/lock:
    parameters:
      - name: report_item_id
        in: path
        required: true
        schema:
          type: integer
      - name: field_id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags: [analyze]
      responses:
        '401':
          description: authorization error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.error'
  /analyze/report-items/{report_item_id}/field-locks/{field_id}/unlock:
    parameters:
      - name: report_item_id
        in: path
        required: true
        schema:
          type: integer
      - name: field_id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags: [analyze]
      responses:
        '401':
          description: authorization error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.error'
  /analyze/report-items/{report_item_id}/field-locks/{field_id}/hold:
    parameters:
      - name: report_item_id
        in: path
        required: true
        schema:
          type: integer
      - name: field_id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags: [analyze]
      responses:
        '401':
          description: authorization error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.error'
  /analyze/report-item-attributes/{attribute_id}/enums:
    parameters:
      - name: attribute_id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags: [analyze]
      responses:
        '401':
          description: authorization error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.error'
  /analyze/report-items/{report_item_id}/file-attributes:
    parameters:
      - name: report_item_id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags: [analyze]
      responses:
        '401':
          description: authorization error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.error'
  /analyze/report-items/{report_item_id}/file-attributes/{attribute_id}:
    parameters:
      - name: report_item_id
        in: path
        required: true
        schema:
          type: integer
      - name: attribute_id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags: [analyze]
      responses:
        '401':
          description: authorization error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.error'
  /analyze/report-items/{report_item_id}/file-attributes/{attribute_id}/file:
    parameters:
      - name: report_item_id
        in: path
        required: true
        schema:
          type: integer
      - name: attribute_id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags: [analyze]
      responses:
        '401':
          description: authorization error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resp.auth.error'

components:

  schemas:
    
    #requests
    
    req.auth.username_password:
      type: object
      properties:
        username:
          type: string
          example: 936@xkcd.com
        password:
          type: string
          example: correct horse battery staple
      required:
        - username
        - password
    req.auth.keycloak:
      type: object
      properties:
        code:
          type: string
        session_state:
          type: string
      required:
        - code
        - session_state
    req.auth.oidc:
      type: object
      properties:
        access_token:
          type: string
      required: 
        - access_token
            
    #responses
    
    resp.auth.JWT:
      type: object
      properties:
        access_token:
          type: string
    resp.auth.error:
      type: object
      properties:
        error:
          type: string
    resp.auth.error.keycloak.missing_param:
      type: object
      properties:
        error:
          type: string
          example: Missing `code` and/or `session_state` parameter
    resp.auth.error.keycloak:
      type: object
      properties:
        error:
          type: string
          example: Internal server error
          
    #general
    
    presentation:
      type: object
      properties:
        title:
          type: string
        subtitle:
          type: string
        tag:
          type: string
    user.base:
      type: object
      properties:
        id:
          type: integer
          example: 42
        username:
          type: string
          example: alice@example.com
        name:
          type: string
          example: Alice
    user:
      allOf:
        - $ref: '#/components/schemas/user.base'
        - type: object
          properties:
            roles:
              type: array
              items:
                $ref: '#/components/schemas/role'
            permissions:
              type: array
              items:
                $ref: '#/components/schemas/permission'
            organisations:
              type: array
              items:
                $ref: '#/components/schemas/organization'
    user.presentation:
      allOf:
        - $ref: '#/components/schemas/user'
        - $ref: '#/components/schemas/presentation'
    hotkey:
      type: object
      properties:
        key_code:
          type: integer
        key:
          type: string
        alias:
          type: string
    user_profile:
      type: object
      properties:
        spellcheck:
          type: boolean
          example: True
        dark_theme:
          type: boolean
          example: False
        word_lists:
          type: array
          items: 
            $ref: '#/components/schemas/wordlist'
        hotkeys:
          type: array
          items: 
            $ref: '#/components/schemas/hotkey'
    user.new:
      allOf:
        - $ref: '#/components/schemas/user_profile'
        - type: object
          properties:
            word_lists:
              type: array
              items:
                $ref: '#/components/schemas/wordlist'
            hotkeys:
              type: array
              items:
                $ref: '#/components/schemas/hotkey'
    permission:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
    role.base:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
    role:
      allOf:
        - $ref: '#/components/schemas/role.base'
        - type: object
          properties:
            permissions:
              type: array
              items:
                $ref: '#/components/schemas/permission'
    role.presentation:
      allOf:
        - $ref: '#/components/schemas/role'
    organization:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        address:
          $ref: '#/components/schemas/address'
    organization.presentation:
      allOf:
        - $ref: '#/components/schemas/organization'
        - $ref: '#/components/schemas/presentation'
    address:
      type: object
      properties:
        street:
          type: string
        city:
          type: string
        zip:
          type: string
        country:
          type: string
    wordlist_entry:
      type: object
      properties:
        value:
          type: string
        description:
          type: string
    wordlist_category:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        link:
          type: string
        entries:
          type: array
          items:
            $ref: '#/components/schemas/wordlist_entry'
    wordlist:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        use_for_stop_words:
          type: boolean
        categories:
          type: array
          items:
            $ref: '#/components/schemas/wordlist_category'
    wordlist.presentation:
      allOf:
        - $ref: '#/components/schemas/wordlist'
        - $ref: '#/components/schemas/presentation'
    attribute_group_item:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        index:
          type: integer
        min_occurrence:
          type: integer
        max_occurrence:
          type: integer
        attribute:
          $ref: '#/components/schemas/attribute'
    attribute_group.base:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        section:
          type: integer
        section_title:
          type: string
        index:
          type: integer
    attribute_group:
      allOf:
        - $ref: '#/components/schemas/attribute_group.base'
        - type: object
          properties:
            attribute_group_items:
              type: array
              items:
                $ref: '#/components/schemas/attribute_group_item'
    report_item_type.base:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
    report_item_type:
      allOf:
        - $ref: '#/components/schemas/report_item_type.base'
        - type: object
          properties:
            attribute_groups:
              type: array
              items:
                $ref: '#/components/schemas/attribute_group'
    report_item_type.presentation:
      allOf:
        - $ref: '#/components/schemas/report_item_type'
        - $ref: '#/components/schemas/presentation'
    report_item_attribute.base:
      type: object
      properties:
        id:
          type: integer
        value:
          type: string
        binary_mime_type:
          type: string
        binary_size:
          type: integer
        binary_description:
          type: string
        attribute_group_item_title:
          type: string
        attribute_group_item_id:
          type: integer
    report_item_attribute:
      allOf:
        - $ref: '#/components/schemas/report_item_attribute.base'
        - type: object
          properties:
            created:
              $ref: '#/components/schemas/date'
            last_updated:
              $ref: '#/components/schemas/date'
            version:
              type: integer
            current:
              type: boolean
            user:
              $ref: '#/components/schemas/user.base'
    report_item.base:
      type: object
      properties:
        id:
          type: integer
        uuid:
          type: string
        title:
          type: string
        title_prefix:
          type: string
        created:
          $ref: '#/components/schemas/date'
        last_updated:
          $ref: '#/components/schemas/date'
        completed:
          type: boolean
        report_item_type_id:
          type: integer
    remote_report_item:
      allOf:
        - $ref: '#/components/schemas/report_item.base'
        - $ref: '#/components/schemas/presentation'
        - type: object
          properties:
            remote_user:
              type: string
            attributes:
              type: array
              items:
                $ref: '#/components/schemas/report_item_attribute'
    report_item.new:
      allOf:
        - $ref: '#/components/schemas/report_item.base'
        - type: object
          properties:
            news_item_aggregates:
              type: array
              items:
                type: integer
            remote_report_items:
              type: array
              items:
                type: integer
            attributes:
              type: array
              items:
                $ref: '#/components/schemas/report_item_attribute'
    report_item:
      allOf:
        - $ref: '#/components/schemas/report_item.base'
        - type: object
          properties:
            news_item_aggregates:
              type: array
              items:
                $ref: '#/components/schemas/news_item_aggregate'
            remote_report_items:
              type: array
              items:
                $ref: '#/components/schemas/remote_report_item'
            attributes:
              type: array
              items:
                $ref: '#/components/schemas/report_item_attribute'
            remote_user:
              type: string
    report_item_attribute_remote:
      type: object
      properties:
        attribute_group_item_title:
          type: string
        value:
          type: string
    report_item_remote:
      type: object
      properties:
        uuid:
          type: string
        title:
          type: string
        title_prefix:
          type: string
        completed:
          type: boolean
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/report_item_attribute_remote'
    report_item.presentation:
      allOf:
        - $ref: '#/components/schemas/report_item.base'
        - $ref: '#/components/schemas/presentation'
        - type: object
          properties:
            remote_user:
              type: string
    product_type:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        presenter_id:
          type: string
        parameter_values:
          type: array
          items:
            $ref: '#/components/schemas/parameter_value'
    product_type.presentation:
      allOf:
        - $ref: '#/components/schemas/product_type'
        - $ref: '#/components/schemas/presentation'
    parameter_value:
      type: object
      properties:
        value:
          type: string
        parameter:
          $ref: '#/components/schemas/parameter'
    parameter_value.export:
      allOf:
        - $ref: '#/components/schemas/parameter_value'
        - type: object
          properties:
            value:
              type: string
            parameter:
              $ref: '#/components/schemas/parameter.export'
    parameter_type:
      type: string
      enum: [STRING, NUMBER, BOOLEAN]
    parameter:
      type: object
      properties:
        id:
          type: integer
        key:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          $ref: '#/components/schemas/parameter_type'
    parameter.export:
      type: object
      properties:
        key:
          type: string
    attribute_type:
      type: string
      enum: [STRING, NUMBER, BOOLEAN, RADIO, ENUM, TEXT, RICH_TEXT, DATE, TIME, DATE_TIME, LINK, ATTACHMENT, TLP, CPE, CVE, CVSS]
    attribute_validator:
      type: string
      enum: [NONE, EMAIL, NUMBER, RANGE, REGEXP]
    attribute_enum:
      type: object
      properties:
        id:
          type: integer
        index:
          type: integer
        value:
          type: string
        description:
          type: string
    attribute.base:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        type:
          $ref: '#/components/schemas/attribute_type'
        default_value:
          type: string
        validator:
          $ref: '#/components/schemas/attribute_validator'
        validator_parameter:
          type: string
    attribute:
      allOf:
        - $ref: '#/components/schemas/attribute.base'
        - type: object
          properties:
            attribute_enums:
              type: array
              items:
                $ref: '#/components/schemas/attribute_enum'
    attribute.presentation:
      allOf:
        - $ref: '#/components/schemas/attribute'
        - $ref: '#/components/schemas/presentation'
        - type: object
          properties:
            attribute_enums_total_count:
              type: integer
    publisher_preset.base:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        parameter_values:
          type: array
          items:
            $ref: '#/components/schemas/parameter_value'
    publisher_preset:
      allOf:
        - $ref: '#/components/schemas/publisher_preset.base'
        - type: object
          properties:
            description:
              type: string
            use_for_notifications:
              type: boolean
            publisher_id:
              type: string
    publisher_preset.presentation:
      allOf:
        - $ref: '#/components/schemas/publisher_preset'
        - $ref: '#/components/schemas/presentation'
    news_item_attribute.base:
      type: object
      properties:
        id:
          type: integer
        key:
          type: string
        value:
          type: string
        binary_mime_type:
          type: string
    news_item_attribute:
      allOf:
        - $ref: '#/components/schemas/news_item_attribute.base'
        - type: object
          properties:
            binary_value:
              type: string
    news_item_data.base:
      type: object
      properties:
        id:
          type: string
        hash:
          type: string
        title:
          type: string
        review:
          type: string
        source:
          type: string
        link:
          type: string
        published:
          type: string
        author:
          type: string
        collected:
          $ref: '#/components/schemas/date'
        osint_source_id:
          type: string
    news_item_data:
      allOf:
        - $ref: '#/components/schemas/news_item_data.base'
        - type: object
          properties:
            content:
              type: string
            attributes:
              type: array
              items:
                $ref: '#/components/schemas/news_item_attribute'
    news_item_remote:
      type: object
      properties:
        hash:
          type: string
        title:
          type: string
        review:
          type: string
        source:
          type: string
        link:
          type: string
        published:
          type: string
        author:
          type: string
        collected:
          $ref: '#/components/schemas/date'
        content:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/news_item_attribute'
        relevance:
          type: integer
    news_item_data.presentation:
      allOf:
        - $ref: '#/components/schemas/news_item_data'
        - type: object
          properties:
            remote_source:
              type: string
            attributes:
              $ref: '#/components/schemas/news_item_attribute.base'
    news_item.base:
      type: object
      properties:
        id:
          type: integer
        likes:
          type: integer
        dislikes:
          type: integer
        read:
          type: boolean
        important:
          type: boolean
        me_like:
          type: boolean
        me_dislike:
          type: boolean
        news_items_data:
          $ref: '#/components/schemas/news_item_data'
    news_item.presentation:
      allOf:
        - $ref: '#/components/schemas/news_item.base'
    news_item:
      allOf:
        - $ref: '#/components/schemas/news_item.base'
        - type: object
          properties:
            news_item_data:
              $ref: '#/components/schemas/news_item_data.presentation'
    news_item_aggregate:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        created:
          $ref: '#/components/schemas/date'
        comments:
          type: string
        likes:
          type: integer
        dislikes:
          type: integer
        read:
          type: boolean
        important:
          type: boolean
        me_like:
          type: boolean
        me_dislike:
          type: boolean
        in_reports_count:
          type: integer
        news_items:
          type: array
          items:
            $ref: '#/components/schemas/news_item.presentation'
    modify_report_item:
      oneOf:
        - type: object
          properties:
            update:
              type: string
            title:
              type: string
            title_prefix:
              type: string
            completed:
              type: boolean
            attribute_id:
              type: integer
            attribute_value:
              type: string
            user_id:
              type: integer
            report_item_id:
              type: integer
          required: [user_id, report_item_id]
        - type: object
          properties:
            add:
              type: string
            attribute_id:
              type: integer
            attribute_group_item_id:
              type: integer
            aggregate_ids:
              type: array
              items:
                type: integer
            remote_report_ids:
              type: array
              items:
                type: integer
            user_id:
              type: integer
            report_item_id:
              type: integer
          required: [user_id, report_item_id]
        - type: object
          properties:
            delete:
              type: string
            attribute_id:
              type: integer
            aggregate_id:
              type: integer
            remote_report_item_id:
              type: integer
            user_id:
              type: integer
            report_item_id:
              type: integer
          required: [user_id, report_item_id]
    date:
      type: string
      example: '%d.%m.%Y - %H:%M'
      
  securitySchemes:
    API_key:
      type: http
      scheme: bearer
      bearerFormat: JWT
